'------------------------------------------------------------------------------
' <auto-generated>
'    Este código se generó a partir de una plantilla.
'
'    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
'    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Objects
Imports System.Data.Objects.DataClasses
Imports System.Linq

Partial Public Class DB_VACACIONESEntities6
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=DB_VACACIONESEntities6")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Property tb_empleado() As DbSet(Of tb_empleado)
    Public Property tb_tipo_identificacion() As DbSet(Of tb_tipo_identificacion)

    Public Overridable Function buscar_empleado(nombre_empleado As String) As ObjectResult(Of buscar_empleado_Result)
        Dim nombre_empleadoParameter As ObjectParameter = If(nombre_empleado IsNot Nothing, New ObjectParameter("nombre_empleado", nombre_empleado), New ObjectParameter("nombre_empleado", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of buscar_empleado_Result)("buscar_empleado", nombre_empleadoParameter)
    End Function

    Public Overridable Function crear_empleado(nombres As String, apellidos As String, id_tipo_identificacion As Nullable(Of Integer), numero_identificiacion As String, fecha_ingreso As Nullable(Of Date), salario_base As Nullable(Of Decimal), direccion As String) As Integer
        Dim nombresParameter As ObjectParameter = If(nombres IsNot Nothing, New ObjectParameter("nombres", nombres), New ObjectParameter("nombres", GetType(String)))

        Dim apellidosParameter As ObjectParameter = If(apellidos IsNot Nothing, New ObjectParameter("apellidos", apellidos), New ObjectParameter("apellidos", GetType(String)))

        Dim id_tipo_identificacionParameter As ObjectParameter = If(id_tipo_identificacion.HasValue, New ObjectParameter("id_tipo_identificacion", id_tipo_identificacion), New ObjectParameter("id_tipo_identificacion", GetType(Integer)))

        Dim numero_identificiacionParameter As ObjectParameter = If(numero_identificiacion IsNot Nothing, New ObjectParameter("numero_identificiacion", numero_identificiacion), New ObjectParameter("numero_identificiacion", GetType(String)))

        Dim fecha_ingresoParameter As ObjectParameter = If(fecha_ingreso.HasValue, New ObjectParameter("fecha_ingreso", fecha_ingreso), New ObjectParameter("fecha_ingreso", GetType(Date)))

        Dim salario_baseParameter As ObjectParameter = If(salario_base.HasValue, New ObjectParameter("salario_base", salario_base), New ObjectParameter("salario_base", GetType(Decimal)))

        Dim direccionParameter As ObjectParameter = If(direccion IsNot Nothing, New ObjectParameter("direccion", direccion), New ObjectParameter("direccion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("crear_empleado", nombresParameter, apellidosParameter, id_tipo_identificacionParameter, numero_identificiacionParameter, fecha_ingresoParameter, salario_baseParameter, direccionParameter)
    End Function

    Public Overridable Function edit_empleado(id As Nullable(Of Integer)) As ObjectResult(Of edit_empleado_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of edit_empleado_Result)("edit_empleado", idParameter)
    End Function

    Public Overridable Function editar_empleado(id_empleado As Nullable(Of Integer), nombres As String, apellidos As String, id_tipo_identificacion As Nullable(Of Integer), numero_identificiacion As String, fecha_ingreso As Nullable(Of Date), salario_base As Nullable(Of Decimal), direccion As String) As Integer
        Dim id_empleadoParameter As ObjectParameter = If(id_empleado.HasValue, New ObjectParameter("id_empleado", id_empleado), New ObjectParameter("id_empleado", GetType(Integer)))

        Dim nombresParameter As ObjectParameter = If(nombres IsNot Nothing, New ObjectParameter("nombres", nombres), New ObjectParameter("nombres", GetType(String)))

        Dim apellidosParameter As ObjectParameter = If(apellidos IsNot Nothing, New ObjectParameter("apellidos", apellidos), New ObjectParameter("apellidos", GetType(String)))

        Dim id_tipo_identificacionParameter As ObjectParameter = If(id_tipo_identificacion.HasValue, New ObjectParameter("id_tipo_identificacion", id_tipo_identificacion), New ObjectParameter("id_tipo_identificacion", GetType(Integer)))

        Dim numero_identificiacionParameter As ObjectParameter = If(numero_identificiacion IsNot Nothing, New ObjectParameter("numero_identificiacion", numero_identificiacion), New ObjectParameter("numero_identificiacion", GetType(String)))

        Dim fecha_ingresoParameter As ObjectParameter = If(fecha_ingreso.HasValue, New ObjectParameter("fecha_ingreso", fecha_ingreso), New ObjectParameter("fecha_ingreso", GetType(Date)))

        Dim salario_baseParameter As ObjectParameter = If(salario_base.HasValue, New ObjectParameter("salario_base", salario_base), New ObjectParameter("salario_base", GetType(Decimal)))

        Dim direccionParameter As ObjectParameter = If(direccion IsNot Nothing, New ObjectParameter("direccion", direccion), New ObjectParameter("direccion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("editar_empleado", id_empleadoParameter, nombresParameter, apellidosParameter, id_tipo_identificacionParameter, numero_identificiacionParameter, fecha_ingresoParameter, salario_baseParameter, direccionParameter)
    End Function

    Public Overridable Function eliminar_empleado(id_empleado As Nullable(Of Integer)) As Integer
        Dim id_empleadoParameter As ObjectParameter = If(id_empleado.HasValue, New ObjectParameter("id_empleado", id_empleado), New ObjectParameter("id_empleado", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("eliminar_empleado", id_empleadoParameter)
    End Function

    Public Overridable Function lista_empleado() As ObjectResult(Of lista_empleado_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of lista_empleado_Result)("lista_empleado")
    End Function

    Public Overridable Function visualizar_vacaciones(fechainicio As Nullable(Of Date), fechafin As Nullable(Of Date), id As Nullable(Of Integer), diastomados As Nullable(Of Integer)) As ObjectResult(Of visualizar_vacaciones_Result)
        Dim fechainicioParameter As ObjectParameter = If(fechainicio.HasValue, New ObjectParameter("fechainicio", fechainicio), New ObjectParameter("fechainicio", GetType(Date)))

        Dim fechafinParameter As ObjectParameter = If(fechafin.HasValue, New ObjectParameter("fechafin", fechafin), New ObjectParameter("fechafin", GetType(Date)))

        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim diastomadosParameter As ObjectParameter = If(diastomados.HasValue, New ObjectParameter("diastomados", diastomados), New ObjectParameter("diastomados", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of visualizar_vacaciones_Result)("visualizar_vacaciones", fechainicioParameter, fechafinParameter, idParameter, diastomadosParameter)
    End Function

End Class
